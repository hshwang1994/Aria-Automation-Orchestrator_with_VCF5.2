<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="375a4693-d026-4060-a27c-205c417541bd" editor-version="2.0" version="0.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Custom.AIP.Create Post Provision is followed by the VM attach</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="inputProperties" type="Properties"/>
    </input>
    <output/>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="50.0" x="420.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item0" type="task" comparator="0">
        <display-name>Scriptable task</display-name>
        <script encoded="false">var aa = System.getModule("com.bvp").AaManager(true);
var computeLink = inputProperties.requestInputs.computeLink;
var interfaceLink = inputProperties.requestInputs.interfaceLink;
var deploymentId = inputProperties.deploymentId;

var deploymentLink = aa.get("/deployment/api/deployments/" + deploymentId + "/resources");
if (!deploymentLink.content || deploymentLink.content.length === 0) {
    throw "No deploymentLink found for deployment " + deploymentId;
}

// AIP Create Requests 성공 확인
var allSuccessful = false;
var count = 0;
while (!allSuccessful) {
    allSuccessful = true; // 매 루프마다 초기화
    var statuses = [];

    var result = aa.get("/deployment/api/deployments/" + deploymentId + "/requests").content[0];
    statuses.push(result.status);

    if (result.status !== "SUCCESSFUL") {
        allSuccessful = false;
    }

    count++;
    if (count &gt; 5) {
        throw "Waiting Time out"
    }
    // Optional: 너무 빠른 루프 방지
    System.sleep(5000); // 5초 대기 (아래에 sleep 함수 있음)
    
}

// Attach Action
var resourceId = deploymentLink.content[0].id;
var requestsLink = "/deployment/api/resources/" + resourceId + "/requests";
var data = {
    actionId: "Custom.AIP.custom.attach",
    reason: "Attach To Virtual Machine",
    inputs: {
        "computeLink": computeLink,
        "interfaceLink": interfaceLink
    }
};
var requests = aa.post(requestsLink, data);</script>
        <in-binding>
            <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="60.0" x="220.0"/>
    </workflow-item>
</ns2:workflow>
