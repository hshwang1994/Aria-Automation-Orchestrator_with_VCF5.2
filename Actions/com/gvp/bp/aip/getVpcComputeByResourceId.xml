<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getVpcComputeByResourceId" result-type="Array/Properties" api-version="6.0.0" id="07dde08a-fdca-4920-aea6-869c113de1b3" version="0.0.0" category-name="com.gvp.bp.aip">
  <description><![CDATA[AIP.Attach Catalog Used]]></description>
  <param n="resourceId" t="string"><![CDATA[]]></param>
  <param n="type" t="string"/>
  <script encoded="false"><![CDATA[var aa = System.getModule("com.bvp").AaManager(true);
if(resourceId == null || resourceId == "" || !type){
    return null;
}
var profileLink = aa.get("/deployment/api/resources/"+resourceId).properties.vpc;

var apiPath;
if (type === "VM") {
    apiPath = "/resources/compute?expand&$filter=customProperties.vpc eq '" + profileLink + "'";
} else if (type === "LB") {
    apiPath = "/resources/load-balancers?expand&$filter=customProperties.vpc eq '" + profileLink + "'";
} else {
    throw "지원하지 않는 type 값입니다: " + type;
}
var response = aa.getUerp(apiPath);

var result = [];
for each (var link in response.documentLinks) {
    var doc = response.documents[link];
    result.push({
        label: doc.customProperties.displayName ? doc.customProperties.displayName : doc.name,
        value: link
    });
}

result.sort(function(a, b) {
    var A = a.label.toUpperCase(), B = b.label.toUpperCase();
    if (A < B) return -1;
    if (A > B) return  1;
    return 0;
});
return result;


/*
var computes = aa.getUerp("/resources/compute?expand&$filter=customProperties.vpc eq '" + profileLink + "'");
var result = [];
for each(var computeLink in computes.documentLinks) {
    var compute = computes.documents[computeLink];
    result.push({
        label: compute.customProperties.displayName ? compute.customProperties.displayName : compute.name,
        value: computeLink
    });
}
return result.sort(function (a, b) {
    return a.label.toUpperCase() < b.label.toUpperCase() ? -1 : 1;
});
*/
]]></script>
</dunes-script-module>