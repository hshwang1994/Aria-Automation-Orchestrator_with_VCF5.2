<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getInstancesVMByProfileLink" result-type="Array/Properties" api-version="6.0.0" id="d9d99ffc-16b6-450d-a283-1e529a1d169a" version="0.0.1" category-name="com.gvp.bp.nlb">
  <param n="profileLink" t="string"/>
  <param n="projectId" t="string"/>
  <script encoded="false"><![CDATA[if (!profileLink) {
    throw "profileLink cannot be null";
}
if (!projectId) {
    throw "projectId cannot be null";
}

var aa = System.getModule("com.bvp").AaManager(true);

var profileObj;
try {
    profileObj = aa.getUerp(profileLink);
} catch (e) {
    throw "Failed to retrieve NetworkProfile from UERP: " + e;
}

var subnetLinks = profileObj.subnetLinks;
System.log("Retrieved subnetLinks for profile [" + profileLink + "]: " + JSON.stringify(subnetLinks));

if (!subnetLinks || subnetLinks.length === 0) {
    throw "해당 프로파일에 연결된 서브넷이 없습니다.";
}

var projectLink = "/provisioning/resources/projects/" + projectId;

var result    = [];
var seenLinks = {};

for each (var subnetLink in subnetLinks) {
    var ifaceResp;
    try {
        ifaceResp = aa.getUerp(
            "/resources/network-interfaces?expand&$filter=subnetLink eq '" + subnetLink + "'"
        );
    } catch (e) {
        System.log("Warning: Failed to retrieve interfaces for subnet [" + subnetLink + "]: " + e);
        continue;
    }

    if (!ifaceResp.documentLinks || ifaceResp.documentLinks.length === 0) {
        System.log("No interfaces found on subnet: " + subnetLink);
        continue;
    }

    var interfaceLinks = ifaceResp.documentLinks;

    var computeResp;
    try {
        computeResp = aa.getUerp(
            "/resources/compute?expand&$filter=projectAuthLink eq '" + projectLink + "'&size=10000"
        );
    } catch (e) {
        throw "Failed to retrieve compute resources for project [" + projectLink + "]: " + e;
    }

    if (!computeResp.documentLinks || computeResp.documentLinks.length === 0) {
        throw "해당 프로젝트 내에 VM이 존재하지 않습니다. projectLink=" + projectLink;
    }

    for each (var computeLink in computeResp.documentLinks) {
        var compDoc  = computeResp.documents[computeLink];
        var nicLinks = compDoc.networkInterfaceLinks || [];

        for each (var ifSelfLink in interfaceLinks) {
            if (nicLinks.indexOf(ifSelfLink) !== -1) {
                if (!seenLinks[computeLink]) {
                    seenLinks[computeLink] = true;
                    result.push({
                        label: compDoc.hostName || compDoc.name || computeLink,
                        value: computeLink
                    });
                }
                break;
            }
        }
    }
}

if (result.length === 0) {
    throw "해당 VPC 프로파일 내의 서브넷들에 연결된 VM을 찾을 수 없습니다.";
}

result.sort(function(a, b) {
    var la = (a.label || "").toUpperCase();
    var lb = (b.label || "").toUpperCase();
    return la < lb ? -1 : (la > lb ? 1 : 0);
});

return result;
]]></script>
</dunes-script-module>