<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="peeringProvision_Copy" result-type="string" api-version="6.0.0" id="93c6dae3-fe98-4734-ac44-190c1f5d1213" version="0.0.0" allowed-operations="vfe" category-name="com.test.ecs.event.backup">
  <param n="peeringId" t="string"><![CDATA[]]></param>
  <param n="subnetLink1" t="string"><![CDATA[]]></param>
  <param n="subnetLink2" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[var nsxManager = System.getModule("com.ecs").NsxManager;
var aa = System.getModule("com.ecs").AaManager(true);

var subnet1 = aa.getUerp(subnetLink1);
var endpointLink1 = subnet1.endpointLink;
var subnetCidr1 = subnet1.subnetCIDR;
var tier1Path1 = subnet1.customProperties.vpcManagedTier1Path;
var transitAddress1 = aa.getUerp(subnet1.customProperties.vpcTransitIpAddressLink).ipAddress;

var subnet2 = aa.getUerp(subnetLink2);
var endpointLink2 = subnet2.endpointLink;
var subnetCidr2 = subnet2.subnetCIDR;
var tier1Path2 = subnet2.customProperties.vpcManagedTier1Path;
var transitAddress2 = aa.getUerp(subnet2.customProperties.vpcTransitIpAddressLink).ipAddress;

var nsx = nsxManager(aa.getUerp(endpointLink1).endpointProperties.hostName.split(".")[0]);
nsx.put("/policy/api/v1" + tier1Path1 + "/static-routes/" + peeringId, {
    network: subnetCidr2,
    next_hops: [{
        ip_address: transitAddress2,
        admin_distance: 1
    }]
});
if (endpointLink1 != endpointLink2) { nsx = nsxManager(aa.getUerp(endpointLink2).endpointProperties.hostName.split(".")[0]); }
nsx.put("/policy/api/v1" + tier1Path2 + "/static-routes/" + peeringId, {
    network: subnetCidr1,
    next_hops: [{
        ip_address: transitAddress1,
        admin_distance: 1
    }]
});
return "";]]></script>
</dunes-script-module>