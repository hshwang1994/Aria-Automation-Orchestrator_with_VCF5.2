<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="mysql" result-type="string" api-version="6.0.0" id="8b11e883-255b-466b-b366-86a18adffd9e" version="0.0.5" allowed-operations="vfe" category-name="com.test.goodmit.library.app.linux">
  <param n="vcHostname" t="string"><![CDATA[]]></param>
  <param n="vcUsername" t="string"><![CDATA[]]></param>
  <param n="vcPassword" t="string"><![CDATA[]]></param>
  <param n="vmName" t="string"><![CDATA[]]></param>
  <param n="vmUsername" t="string"><![CDATA[]]></param>
  <param n="vmPassword" t="string"><![CDATA[]]></param>
  <param n="packageName" t="string"><![CDATA[]]></param>
  <param n="version" t="string"><![CDATA[]]></param>
  <param n="options" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[function generateInstallScript(packageName, version, options) {
    // packageName: string, version: string, options: string
    var script = "";
    var packageName = packageName + "-server"   
    // OS 확인 스크립트
    script += 'if [ -f /etc/os-release ]; then\n';
    script += '    . /etc/os-release\n';
    script += 'else\n';
    script += '    echo "Cannot determine OS distribution"\n';
    script += '    exit 1\n';
    script += 'fi\n\n';
        
    // 배포판별 설치 명령어 생성
    script += 'if [[ "$ID" == "ubuntu" ]] || [[ "$ID" == "debian" ]]; then\n';
    script += '    INSTALL_CMD="apt-get install -y"\n';
    script += '    sudo apt-get update\n';
    
    // Ubuntu/Debian 패키지 형식 지정
    if (version) {
        script += '    PACKAGE="' + packageName + '=' + version + '"\n';
    } else {
        script += '    PACKAGE="' + packageName + '"\n';
    }
    script += '    OPTIONS="' + (options || '') + '"\n';
     
    script += 'elif [[ "$ID" == "centos" ]] || [[ "$ID" == "rhel" ]]; then\n';
    script += '    INSTALL_CMD="yum install -y"\n';
    
    // CentOS/RHEL 패키지 형식 지정
    if (version) {
        script += '    PACKAGE="' + packageName + '-' + version + '"\n';
    } else {
        script += '    PACKAGE="' + packageName + '"\n';
    }
    script += '    OPTIONS="' + (options || '') + '"\n';
     
    script += 'else\n';
    script += '    echo "Unsupported Linux distribution: $ID"\n';
    script += '    exit 1\n';
    script += 'fi\n\n';

    // 패키지 설치 실행
    script += 'if sudo $INSTALL_CMD "$PACKAGE" $OPTIONS; then\n';
    script += '    echo "Successfully installed $PACKAGE"\n';
    script += '    exit 0\n';
    script += 'else\n';
    script += '    echo "Failed to install $PACKAGE"\n';
    script += '    exit 1\n';
    script += 'fi\n';

    return script;
}

try {
    // vSphere 연결
    var execScripts = System.getModule("com.ecs.common").execScripts;
    
    var installScript = generateInstallScript(packageName, version, options);
    
    var result = execScripts(vcHostname, vcUsername, vcPassword, 
                            vmName, vmUsername, vmPassword, installScript);
    
    // 결과 확인
    if (result.indexOf("Successfully installed") !== -1) {
        System.log("Package installation completed");
        return {
            success: true,
            message: "Successfully installed package " + packageName,
            details: result
        };
    } else {
        throw "Installation failed: " + result;
    }
} catch (error) {
    System.error("Failed to install package: " + error);
    throw "Package installation failed: " + error;
}
]]></script>
</dunes-script-module>