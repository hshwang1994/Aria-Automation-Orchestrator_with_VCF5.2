<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="getSupervisorNamespaceTagbyNamespace" result-type="Array/string" api-version="6.0.0" id="09f48d8c-9ef2-4565-b331-2ae513b585e5" version="0.0.0" allowed-operations="vfe" category-name="com.test.goodmit.clovir">
  <param n="namespacesName" t="string"><![CDATA[]]></param>
  <script encoded="false"><![CDATA[if (namespacesName == null || namespacesName == undefined) {
    return null;
}

var aa = System.getModule("com.ecs").AaManager(true);
var zones = aa.get("/cmx/api/resources/k8s-zones").content;
var namespaces = aa.get("/cmx/api/resources/supervisor-namespaces").content;
var result = [];
var namespaceSelfLinkId = null;

for each (var ns in namespaces) {
    if (ns.name === namespacesName && ns.status === "READY" && ns.origin === "VRA" && ns.registered === true) {
        namespaceSelfLinkId = ns.selfLinkId;
        break;
    }
}

// 조건에 맞는 namespace가 없으면 빈 배열 반환
if (!namespaceSelfLinkId) {
    return [];
}

for each (var zone in zones) {
    if (zone.supervisorNamespaces) {
        for each (var supNs in zone.supervisorNamespaces) {
            if (supNs.namespaceSelfLinkId === namespaceSelfLinkId && supNs.tagLinks) {
                for each (var tagLink in supNs.tagLinks) {
                    var tag = aa.getUerp(tagLink);
                    if (tag && tag.key && tag.value) {
                        result.push(tag.key + ":" + tag.value);
                    }
                }
            }
        }
    }
}

return result;
]]></script>
</dunes-script-module>